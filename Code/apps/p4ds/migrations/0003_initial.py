# Generated by Django 5.1.2 on 2024-11-08 06:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('p4ds', '0002_delete_examplemodel'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_no', models.AutoField(db_comment='사용자 식별 번호(자동부여)', primary_key=True, serialize=False)),
                ('user_id', models.CharField(db_comment='로그인 아이디', max_length=50, unique=True)),
                ('role', models.IntegerField(blank=True, db_comment='역할 (1: 학생, 2: 선생님)', null=True)),
                ('phone', models.CharField(blank=True, db_comment='전화번호', max_length=20, null=True)),
                ('gender', models.IntegerField(blank=True, db_comment='성별 (1: 남성, 2: 여성)', null=True)),
                ('school_name', models.CharField(blank=True, db_comment='학교명', max_length=100, null=True)),
                ('user_grade', models.CharField(blank=True, db_comment='학년', max_length=20, null=True)),
                ('created_at', models.DateField(auto_now_add=True, db_comment='가입일자')),
            ],
            options={
                'db_table': 'users',
                'db_table_comment': '사용자',
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('question_id', models.CharField(db_comment='문제 번호 최대 5자리 숫자와 최대 6자의 조합. 예;25876_160952', max_length=20, primary_key=True, serialize=False)),
                ('answer_filename', models.CharField(blank=True, db_comment='답안 파일명 학년_학기_단원_id.png 형식의 파일명. 예:P3_1_02_25876_160952_A.png', max_length=255, null=True)),
                ('answer_correct', models.TextField(blank=True, db_comment='모범답안 정답', null=True)),
                ('answer_text', models.TextField(blank=True, db_comment='모범답안 풀이', null=True)),
                ('source', models.CharField(blank=True, db_comment='데이터 출처', max_length=255, null=True)),
                ('label', models.CharField(blank=True, db_comment='데이터 용도 training/validation', max_length=255, null=True)),
            ],
            options={
                'db_table': 'answers',
                'db_table_comment': '모범답안',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConceptMapping',
            fields=[
                ('question_topic', models.IntegerField(db_comment='문제 토픽 주제 번호(문제생성 데이터)', primary_key=True, serialize=False)),
                ('concept_id', models.IntegerField(db_comment='단원 번호(학습자 역량측정 데이터)')),
                ('question_topic_name', models.CharField(blank=True, db_comment='토픽명 텍스트(문제생성 데이터)', max_length=255, null=True)),
                ('concept_name', models.CharField(blank=True, db_comment='단원명(예:직각삼각형의 합동 조건)', max_length=255, null=True)),
                ('concept_semester', models.CharField(blank=True, db_comment='학기(예:중등-중2-2학기)', max_length=50, null=True)),
                ('concept_description', models.TextField(blank=True, db_comment='단원 설명', null=True)),
                ('concept_chapter_id', models.CharField(blank=True, db_comment='단원 분류 아이디', max_length=50, null=True)),
                ('concept_chapter_name', models.CharField(blank=True, db_comment='단원 분류 내용(예:도형의 성질 > 삼각형의 성질 > 직각삼각형의 합동조건)', max_length=255, null=True)),
                ('concept_achievement_id', models.CharField(blank=True, db_comment='성취 목표 번호', max_length=50, null=True)),
                ('concept_achievement_name', models.CharField(blank=True, db_comment='성취 목표 내용(예:삼각형의 합동 조건을 이해하고 두 삼각형이 합동인지 판별할 수 있다.)', max_length=255, null=True)),
                ('from_concept_id', models.IntegerField(blank=True, db_comment='선행 단원 번호', null=True)),
                ('to_concept_id', models.IntegerField(blank=True, db_comment='후행 단원 번호', null=True)),
            ],
            options={
                'db_table': 'concept_mapping',
                'db_table_comment': '단원 매핑',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionHistory',
            fields=[
                ('question_set_id', models.IntegerField(db_comment='문제집 번호(testID)', primary_key=True, serialize=False)),
                ('question_seq', models.IntegerField(db_comment='문제집 내 문제 순서')),
                ('question_id', models.CharField(db_comment='문제 번호(assessmentItemID)', max_length=20)),
                ('user_no', models.IntegerField(db_comment='사용자 식별 번호(learnerID)')),
                ('is_correct', models.IntegerField(db_comment='정답 여부 (1:정답, 0:오답)')),
                ('created_at', models.DateField(blank=True, db_comment='풀이 이력 생성 시간', null=True)),
            ],
            options={
                'db_table': 'question_history',
                'db_table_comment': '풀이 이력',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('question_id', models.CharField(db_comment='문제 번호 최대 5자리 숫자와 최대 6자의 조합. 예;25876_160952', max_length=20, primary_key=True, serialize=False)),
                ('question_filename', models.CharField(blank=True, db_comment='문제 파일명 학년_학기_단원_id.png 형식의 파일명. 예:P3_1_02_25876_160952.png', max_length=255, null=True)),
                ('question_grade', models.CharField(blank=True, db_comment='문제 학년 (예: P3~P6, M1~M3, H)', max_length=10, null=True)),
                ('question_term', models.IntegerField(blank=True, db_comment='문제 학기 (1 또는 2)', null=True)),
                ('question_unit', models.CharField(blank=True, db_comment='문제 단원 (01~99)', max_length=10, null=True)),
                ('question_topic', models.IntegerField(blank=True, db_comment='문제 토픽 주제 (1~999999)', null=True)),
                ('question_topic_name', models.CharField(blank=True, db_comment='토픽명 텍스트', max_length=255, null=True)),
                ('question_type1', models.CharField(blank=True, db_comment='문제 유형1 (단답형, 선택형)', max_length=10, null=True)),
                ('question_type2', models.IntegerField(blank=True, db_comment='발문 구성 유형 (1: 자료+질문, 2: 단일질문)', null=True)),
                ('question_condition', models.IntegerField(blank=True, db_comment='풀이 필수 조건 (0: 없음, 1: 있음)', null=True)),
                ('question_step', models.CharField(blank=True, db_comment='학습 단계 (기본/실생활 활용)', max_length=10, null=True)),
                ('question_sector1', models.CharField(blank=True, db_comment='평가 영역1 (예: 계산/이해/추론/문제해결)', max_length=10, null=True)),
                ('question_sector2', models.CharField(blank=True, db_comment='내용 영역 (예: 수와 연산, 도형과 측정, 변화와 관계, 자료와 가능성)', max_length=255, null=True)),
                ('question_difficulty', models.IntegerField(blank=True, db_comment='출제 난이도 (1: 상, 2: 중, 3: 하)', null=True)),
                ('question_contents', models.IntegerField(blank=True, db_comment='문제 내용 (0: 없음, 1: 있음)', null=True)),
                ('figure_text', models.TextField(blank=True, db_comment='도형 설명 텍스트 (optional)', null=True)),
                ('question_text', models.TextField(blank=True, db_comment='문제 텍스트', null=True)),
                ('source', models.CharField(blank=True, db_comment='데이터 출처', max_length=255, null=True)),
                ('label', models.CharField(blank=True, db_comment='데이터 용도 training/validation', max_length=255, null=True)),
            ],
            options={
                'db_table': 'questions',
                'db_table_comment': '문제',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionSet',
            fields=[
                ('question_set_id', models.AutoField(db_comment='문제집 번호(자동부여)', primary_key=True, serialize=False)),
                ('question_seq', models.IntegerField(db_comment='문제집 내 문제 순서')),
                ('question_id', models.CharField(db_comment='문제 번호', max_length=20)),
                ('user_no', models.IntegerField(db_comment='사용자 식별 번호')),
                ('is_completed', models.IntegerField(blank=True, db_comment='학습 완료 여부 (1:완료, 0: 미완료)', null=True)),
                ('correct_probability', models.FloatField(blank=True, db_comment='문제 정답 확률', null=True)),
            ],
            options={
                'db_table': 'question_set',
                'db_table_comment': '생성된 문제집 내역',
                'managed': False,
            },
        ),
    ]
